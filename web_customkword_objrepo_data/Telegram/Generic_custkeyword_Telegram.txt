*** Keywords ***
Greet_VA_Indo
    [Arguments]    ${greeting_text}= ${VA_Greet1}
    [Documentation]    Can be part of any test case, greet VA
    User_input    ${greeting}
    Sleep    20s
    Run Keyword If    '${greeting_text}' == '${VA_GreetNonTsel}'    Run Keywords    Set Suite Variable    ${VA_SecondGreetWording}    Apa yang bisa Veronika bantu hari ini?
    ...    AND    Set Suite Variable    ${VA_ThirdGreetWording}    Silakan pilih salah satu pilihan di bawah ini atau langsung saja ketik permintaan kamu
    ...    ELSE    Run Keywords    Set Suite Variable    ${VA_SecondGreetWording}    Apa yang bisa Veronika bantu hari ini?
    ...    AND    Set Suite Variable    ${VA_ThirdGreetWording}    Silakan ketik layanan yang dibutuhkan atau pilih menu di bawah    #Hai, kawan simPATI! Ada yang bisa Veronika bantu?
    Check_VA_response_text    1    ${greeting_text}
    Check_VA_response_text    2    ${VA_SecondGreetWording}
    Check_VA_response_image    3
    Check_VA_response_text_with_buttons    3    ${VA_ThirdGreetWording}    ${VA_GreetButton1}    ${VA_GreetButton2}
    Click_Button_From_Response    3    Lihat Menu Utama    Lihat Menu Utama
    Check_VA_response_text_with_buttons    1    Silakan pilih salah satu pilihan dibawah ini atau ketik layanan lain yang dibutuhkan :)    Promosi    Jelajahi Produk Telkomsel    Profil Kamu    Beli Paket dan Tukar POIN
    ...    Bantuan Lainnya
    SeleniumLibrary.Capture Page Screenshot    VAgreet_${TEST NAME}.png
    Sleep    2s

Click_Button_From_Response
    [Arguments]    ${order}    ${r_button}    ${expected_input}
    [Documentation]    This keyword can be used to click (any) button that is part of the VA response.
    Run Keyword If    '${tb_validated}'=='${FALSE}'    Check_VA_response_text_with_buttons    ${order}    ${EMPTY}    ${r_button}
    ...    ELSE    Loop_through_buttons_in_the_response    ${r_button}    ${current_amount_buttons}
    SeleniumLibrary.Click Element    ${xpath_item}[${b_index}]
    Sleep    10s
    ${pop_up_visible}    Run Keyword And Return Status    Element Should Be Visible    //*[@class="confirm_modal_wrap md_simple_modal_wrap"]
    Run Keyword If    ${pop_up_visible}    Click_button_URL
    ...    ELSE    Click_button_actual    ${r_button}    ${expected_input}

User_input
    [Arguments]    ${input_text}
    Wait Until Keyword Succeeds    20s    4s    Element Should Be Visible    ${inputtext_obj}
    SeleniumLibrary.Click Element    ${inputtext_obj}
    SeleniumLibrary.Press Key    ${inputtext_obj}    ${input_text}
    Sleep    1s
    SeleniumLibrary.Press Key    ${inputtext_obj}    \\13
    Sleep    5s
    Set Suite Variable    ${current_user_input}    ${input_text}
    Set Suite Variable    ${tb_validated}    ${FALSE}
    Run Keyword    Count_message_bubble_user_input    ${current_user_input}
    Make_screenshot_user_input

Closing_session
    User_input    ${no_answer}
    Sleep    3s
    ${status_text}    Run Keyword And Return Status    Check_VA_response_text_actual    ${no_answer}    ${current_total_user_message}    1    ${VA_question_2}
    Run Keyword If    ${status_text}    Perform_CES
    ...    ELSE    Check_VA_response_text    1    ${VA_closingstatement}

Perform_CES
    User_input    ${user_rate}
    SeleniumLibrary.Capture Page Screenshot    user_rate_${TEST NAME}.png
    Check_VA_response_text    1    ${VA_question_3}
    #only type in at the moment
    User_input    ${select_Rate}
    Check_VA_response_text    1    ${VA_askRateReason}
    User_input    ${no_answer}
    Check_VA_response_text    1    ${VA_ask_rec}
    User_input    ${give_rec}
    Check_VA_response_text    1    ${VA_closingstatement}

Check_VA_response_text
    [Arguments]    ${order}    @{expected_text}
    Wait Until Keyword Succeeds    1 minute    5s    SeleniumLibrary.Element Should Be Visible    (//div[@class="im_message_text" and text()="${current_user_input}"])[${current_total_user_message}]/ancestor::div[contains(@class,"im_history_message_wrap")]/following-sibling::*[${order}]
    #${check_text}    Get Text    (//div[@class="im_message_text" and text()="${current_user_input}"])[${current_total_user_message}]/ancestor::div[contains(@class,"im_history_message_wrap")]/following-sibling::*[${order}]/descendant::*[@class="im_message_text"]
    #Run Keyword If    '${check_text}'=='${EMPTY}'    Fail    The response is not text
    : FOR    ${item}    IN    @{expected_text}
    \    ${status_text}    Run Keyword And Return Status    Check_VA_response_text_actual    ${current_user_input}    ${current_total_user_message}    ${order}
    \    ...    ${item}
    \    Run Keyword If    ${status_text}    Exit For Loop

Check_VA_response_image
    [Arguments]    ${order}
    [Documentation]    As the URL shown on web is generated by FB, checking URL might be not possible. Currently only checks the class.
    Wait Until Keyword Succeeds    15s    3s    SeleniumLibrary.Element Should Be Visible    (//div[@class="im_message_text" and text()="${current_user_input}"])[${current_total_user_message}]/ancestor::div[contains(@class,"im_history_message_wrap")]/following-sibling::*[${order}]
    ${count_image}    SeleniumLibrary.Get Element Count    (//div[@class="im_message_text" and text()="${current_user_input}"])[${current_total_user_message}]/ancestor::div[contains(@class,"im_history_message_wrap")]/following-sibling::*[${order}]/descendant::*[@class="im_message_media"]/descendant::img[@class="im_message_photo_thumb"]
    Run Keyword If    ${count_image}<1    Fail    Image is not visible in the response

Cancel_and_closing_session
    User_input    ${cancel_answer}
    Sleep    3s
    ${cancel_response}    Run Keyword And Return Status    Check_VA_response_text_actual    ${current_user_input}    ${current_total_user_message}    1    ${VA_cancel}
    Run Keyword If    ${cancel_response}    Run Keywords    Check_VA_response_text    2    ${VA_question_1}
    ...    AND    Closing_session
    ...    ELSE    Perform_CES
