*** Keywords ***
Open_chrome
    [Arguments]    ${URL}
    [Documentation]    Opens _Google Chrome_ to a given web page, without any user profile.
    ...    For more information on what capabilities that _Google Chrome_
    ...    supports, see [https://sites.google.com/a/chromium.org/chromedriver/capabilities%7Cthis Capabilities & ChromeOptions page].
    ${chrome_options}=    Evaluate    sys.modules['selenium.webdriver'].ChromeOptions()    sys
    Call Method    ${chrome_options}    add_argument    test-type
    Call Method    ${chrome_options}    add_argument    --disable-extensions
    Call Method    ${chrome_options}    add_argument    --disable-notifications
    Call Method    ${chrome_options}    add_argument    --disable-infobars
    Run Keyword If    os.sep == '/'    SeleniumLibrary.Create Webdriver    Chrome    my_alias    chrome_options=${chrome_options}
    ...    ELSE    SeleniumLibrary.Create Webdriver    Chrome    my_alias    chrome_options=${chrome_options}    #executable_path=/usr/lib/chromium-browser/chromedriver
    ${width}    ${height}=    SeleniumLibrary.Get Window Size
    SeleniumLibrary.Set Window Size    ${width}    ${height}
    SeleniumLibrary.Go To    ${URL}

Open_chrome_with_user_profile
    [Arguments]    ${URL}
    [Documentation]    Opens _Google Chrome_ with saved user profile.
    ...    For more information on what capabilities that _Google Chrome_
    ...    supports, see [https://sites.google.com/a/chromium.org/chromedriver/capabilities%7Cthis Capabilities & ChromeOptions page].
    ${chrome_options}=    Evaluate    sys.modules['selenium.webdriver'].ChromeOptions()    sys
    Call Method    ${chrome_options}    add_argument    test-type
    Call Method    ${chrome_options}    add_argument    --disable-extensions
    Call Method    ${chrome_options}    add_argument    --disable-notifications
    Call Method    ${chrome_options}    add_argument    --disable-infobars
    Call Method    ${chrome_options}    add_argument    ${user-data-dir}
    Call Method    ${chrome_options}    add_argument    ${profile-dir}
    Run Keyword If    os.sep == '/'    SeleniumLibrary.Create Webdriver    Chrome    my_alias    chrome_options=${chrome_options}
    ...    ELSE    SeleniumLibrary.Create Webdriver    Chrome    my_alias    chrome_options=${chrome_options}    #executable_path=/usr/lib/chromium-browser/chromedriver
    ${width}    ${height}=    SeleniumLibrary.Get Window Size
    SeleniumLibrary.Set Window Size    ${width}    ${height}
    SeleniumLibrary.Go To    ${URL}
