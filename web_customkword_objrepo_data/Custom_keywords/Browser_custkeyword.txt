*** Keywords ***
Open_chrome
    [Arguments]    ${URL}
    [Documentation]    Opens _Google Chrome_ to a given web page, without any user profile.
    ...    For more information on what capabilities that _Google Chrome_
    ...    supports, see [https://sites.google.com/a/chromium.org/chromedriver/capabilities%7Cthis Capabilities & ChromeOptions page].
    ${chrome_options}=    Evaluate    sys.modules['selenium.webdriver'].ChromeOptions()    sys
    Call Method    ${chrome_options}    add_argument    test-type
    Call Method    ${chrome_options}    add_argument    --disable-extensions
    Call Method    ${chrome_options}    add_argument    --disable-notifications
    Call Method    ${chrome_options}    add_argument    --disable-infobars
    Run Keyword If    os.sep == '/'    SeleniumLibrary.Create Webdriver    Chrome    my_alias    chrome_options=${chrome_options}
    ...    ELSE    SeleniumLibrary.Create Webdriver    Chrome    my_alias    chrome_options=${chrome_options}    #executable_path=/usr/lib/chromium-browser/chromedriver
    ${width}    ${height}=    SeleniumLibrary.Get Window Size
    SeleniumLibrary.Set Window Size    ${width}    ${height}
    SeleniumLibrary.Go To    ${URL}
    Set Suite Variable    ${last_opened_URL}    ${URL}

Open_chrome_with_user_profile
    [Arguments]    ${URL}    ${profile-dir_now}
    [Documentation]    Opens _Google Chrome_ with saved user profile.
    ...    For more information on what capabilities that _Google Chrome_
    ...    supports, see [https://sites.google.com/a/chromium.org/chromedriver/capabilities%7Cthis Capabilities & ChromeOptions page].
    ${chrome_options}=    Evaluate    sys.modules['selenium.webdriver'].ChromeOptions()    sys
    Call Method    ${chrome_options}    add_argument    test-type
    Call Method    ${chrome_options}    add_argument    --disable-extensions
    Call Method    ${chrome_options}    add_argument    --disable-notifications
    Call Method    ${chrome_options}    add_argument    --disable-infobars
    Call Method    ${chrome_options}    add_argument    ${user-data-dir}
    Call Method    ${chrome_options}    add_argument    ${profile-dir_now}
    Run Keyword If    os.sep == '/'    SeleniumLibrary.Create Webdriver    Chrome    my_alias    chrome_options=${chrome_options}
    ...    ELSE    SeleniumLibrary.Create Webdriver    Chrome    my_alias    chrome_options=${chrome_options}    #executable_path=/usr/lib/chromium-browser/chromedriver
    ${width}    ${height}=    SeleniumLibrary.Get Window Size
    SeleniumLibrary.Set Window Size    ${width}    ${height}
    SeleniumLibrary.Go To    ${URL}
    Set Suite Variable    ${last_opened_URL}    ${URL}

Check_opened_URL
    [Arguments]    ${c_button}
    Sleep    10s
    ${URLS}    SeleniumLibrary.Get Locations
    ${window_opens}    Get Length    ${URLS}
    ${index_latest_window}    Evaluate    ${window_opens}-1
    ${URL_now}    Get Location
    Select Window    url=${URLmessengerTSEL}
    ${last_url}    Get From List    ${URLS}    ${index_latest_window}
    ${last_url_string}    Convert To String    ${last_url}
    ${last_opened_URL_string}    Convert To String    ${last_opened_URL}
    ${URL_compare}    Run Keyword And Return Status    Should Be Equal As Strings    ${last_url_string}    ${last_opened_URL_string}
    Run Keyword If    ${URL_compare}    Run Keywords    Set Suite Variable    ${current_user_input}    ${c_button}
    ...    AND    Count_message_bubble_user_input    ${current_user_input}
    Set Suite Variable    ${last_opened_URL}    ${last_url}

Check_tags
    Set Suite Variable    ${current_tag}    @{TEST TAGS}[0]
    Run Keyword If    '${prev_tag}'=='NONE'    Open_chrome_based_on_tag
    ...    ELSE IF    '${current_tag}'!='${prev_tag}'    Run Keywords    Close Browser
    ...    AND    Open_chrome_based_on_tag
    ...    ELSE IF    '${current_tag}'=='${prev_tag}'    No Operation

Open_chrome_based_on_tag
    [Documentation]    In progress, if possible include most test cases in one robot file.
    Close Browser
    Run Keyword If    '${current_tag}'=='Telkomsel_Telegram'    Open_chrome_with_user_profile    ${URL_Telegram}    ${profile-dir_T}
    ...    ELSE IF    '${current_tag}'=='Non-Telkomsel_Telegram'    Open_chrome_with_user_profile    ${URL_Telegram}    ${profile-dir_NonT}
    ...    ELSE IF    '${current_tag}'=='Telkomsel_FB'    Open_chrome_with_user_profile    ${URLmessengerTSEL}    ${profile-dir_T}
    ...    ELSE IF    '${current_tag}'=='Telkomsel_Telegram_Postpaid'    Open_chrome_with_user_profile    ${URL_Telegram}    ${profile-dir_TPostPaid}
    Set Suite Variable    ${prev_tag}    ${current_tag}

Set_init_browser_variable
    Set Suite Variable    ${prev_tag}    NONE

Make_screenshot_user_input
    ${input_s}    Remove String Using Regexp    ${current_user_input}    [^a-zA-Z0-9]
    SeleniumLibrary.Capture Page Screenshot    input_${input_s}_${TEST NAME}.png
