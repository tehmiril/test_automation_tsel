*** Keywords ***
Swipe_until_element
    [Arguments]    ${findElement}
    : FOR    ${licznik}    IN RANGE    0    10
    \    Swipe    600    600    100    600
    \    ${elementXNew}    Select_carousel    ${findElement}
    \    Run Keyword If    39.0 < ${elementXNew} < 233.0    Run Keywords    Log    "Yeah"
    \    ...    AND    Exit For Loop
    \    ${licznik}    Set Variable    ${licznik}+1

Select_carousel
    [Arguments]    ${findElement}
    ${bound}    Get Element Location    //android.view.View[@text="${findElement}"]
    ${boundString}    Convert To String    ${bound}
    ${elementsXY}    Split String    ${boundString}    ${SPACE}
    #location format, e.g. ${elementsXY} = [u"{'y':", u'702.0,', u"'x':", u'718.0}']
    ${elementX}    Get From List    ${elementsXY}    3
    ${finalelementX}    Strip String    ${elementX}    characters=}
    [Return]    ${finalelementX}

Open app
    Open Application    ${appiumServer_LINE}    platformName=${platformName_LINE}    platformVersion=${androidVersion_LINE}    deviceName=${deviceName_LINE}    appPackage=${appPackage_LINE}    appActivity=${appActivity_LINE}
    ...    noReset=true

User_input
    [Arguments]    ${input_text}
    Click Element    //*[@content-desc="Keyboard menu"]
    Wait Until Element is Visible    ${textbox_obj}    2    None
    Input Text    ${textbox_obj}    ${input_text}
    Click Element    ${sendkey_obj}
    Sleep    1s
    Click Element    //*[@content-desc="Keyboard menu"]
    Set Suite Variable    ${current_user_input}    ${input_text}
    Set Suite Variable    ${scrolled_down}    ${FALSE}
    Sleep    3s
    Show_user_input_on_screen
    Get_Index

Check_VA_response_text_with_buttons
    [Arguments]    ${order}    ${response_text}    @{t_button}
    ${new_order}    Evaluate    ${order}+${index_user_input}
    ${count_text_buttons}    Get Matching Xpath Count    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.webkit.WebView/android.view.View/android.view.View
    Should Be True    ${count_text_buttons}==2
    ${text_here}    Get Text    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.webkit.WebView/android.view.View/android.view.View[1]/android.view.View
    ${text_here2}=    Remove String Using Regexp    ${text_here}    (\r\n|\r|\n)
    Should Contain    ${text_here2}    ${response_text}
    : FOR    ${item}    IN    @{t_button}
    \    ${status_button}    Get_button_text_from_response    ${count_text_buttons}    ${new_order}    ${item}
    \    Run Keyword If    '${status_button}'=='${FALSE}'    Run Keywords    Fail    This button is not found in the response
    \    ...    AND    Exit For Loop

Get_button_text_from_response
    [Arguments]    ${count_text_buttons}    ${new_order}    ${item}
    : FOR    ${b_order}    IN RANGE    1    ${count_text_buttons}+1
    \    Set Test Variable    ${status_button}    ${FALSE}
    \    ${text_button}    Get Text    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.webkit.WebView/android.view.View/android.view.View[2]/android.view.View[${b_order}]
    \    ${text_button2}=    Remove String Using Regexp    ${text_button}    (\r\n|\r|\n)
    \    ${button_avail}    Run Keyword And Return Status    Should Contain    ${text_button2}    ${item}
    \    Run Keyword If    ${button_avail}    Run Keywords    Set Test Variable    ${status_button}    ${TRUE}
    \    ...    AND    Exit For Loop
    [Return]    ${status_button}

Click_Yes
    ${totalYa}    Get Matching Xpath Count    ${Ya_button}
    Click Element    ${Ya_button}[${totalYa}]

Click_No
    ${totalNo}    Get Matching Xpath Count    ${Tidak_button}
    Click Element    ${Tidak_button}[${totalNo}]

Cancel_and_closing_session
    User_input    ${cancel_answer}
    Check_VA_response_text    ${VA_cancel}
    Check_VA_response_text    ${VA_question_1}
    User_input    ${no_answer}
    Check_VA_response_text    ${VA_question_2}
    User_input    ${user_rate}
    Capture Page Screenshot    user_rate.png
    Check_VA_response_text    ${VA_question_3}
    #only type in at the moment
    User_input    ${select_Rate}
    Check_VA_response_text    ${VA_askRateReason}
    User_input    ${no_answer}
    Check_VA_response_text    ${VA_closingstatement}

Closing_session
    User_input    ${no_answer}
    Check_VA_response_text    ${VA_question_2}
    User_input    ${user_rate}
    Capture Page Screenshot    user_rate.png
    Check_VA_response_text    ${VA_question_3}
    #only type in at the moment
    User_input    ${select_Rate}
    Check_VA_response_text    ${VA_askRateReason}
    User_input    ${no_answer}
    Check_VA_response_text    ${VA_closingstatement}

Check_VA_response_carousel_exists
    [Arguments]    ${order}
    ${new_order}    Evaluate    ${order}+${index_user_input}
    ${count_carousel_items}    Get Matching Xpath Count    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.webkit.WebView/android.view.View/android.view.View
    Should Be True    ${count_carousel_items}>2
    ${carousel_items}    Evaluate    ${count_carousel_items}-1
    Set Suite Variable    ${current_carousel_items}    ${carousel_items}
    Get_XLocation_Carousel_Elements    ${new_order}

Swipe_up_until_user_input
    : FOR    ${loop}    IN RANGE    0    10
    \    Swipe    600    600    600    800
    \    ${count_user_input}    Run Keyword And Return Status    Element Should Be Visible    //*[@resource-id="jp.naver.line.android:id/message_text" and contains (@text, "${current_user_input}")]
    \    Run Keyword If    ${count_user_input}    Run Keywords    Log    "Scroll up up up and found it!"
    \    ...    AND    Capture Page Screenshot    here.png
    \    ...    AND    Exit For Loop
    Count_messages

Find_YLocation
    [Arguments]    ${element}
    ${bound}    Get Element Location    ${element}
    ${boundString}    Convert To String    ${bound}
    ${elementsXY}    Split String    ${boundString}    ${SPACE}
    #location format, e.g. ${elementsXY} = [u"{'y':", u'702.0,', u"'x':", u'718.0}']
    ${elementY}    Get From List    ${elementsXY}    1
    ${finalelementY}    Strip String    ${elementY}    characters=,
    [Return]    ${finalelementY}

Show_user_input_on_screen
    ${count_user_input}    Run Keyword And Return Status    Element Should Be Visible    //*[@resource-id="jp.naver.line.android:id/message_text" and contains (., "${current_user_input}")]
    Run Keyword If    ${count_user_input}==${FALSE}    Swipe_up_until_user_input

Count_messages
    ${count_message1}    Get Matching Xpath Count    //android.widget.ListView[1]/android.widget.LinearLayout
    Set Suite Variable    ${total_messages_on_screen}    ${count_message1}

Check_VA_response_text
    [Arguments]    ${order}    ${expected_text}
    Wait Until Keyword Succeeds    10s    2s    Element Should Be Visible    //*[@resource-id="jp.naver.line.android:id/message_text" and contains(@text,"${expected_text}")]
    ${new_order}    Evaluate    ${order}+${index_user_input}
    ${text_here}    Get Text    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.widget.TextView[1]
    ${text_here2}=    Remove String Using Regexp    ${text_here}    (\r\n|\r|\n)
    Should Contain    ${text_here2}    ${expected_text}

Get_Index
    : FOR    ${looping}    IN RANGE    ${total_messages_on_screen}    0    -1
    \    ${avail}    Run Keyword And Return Status    Element Text Should Be    //android.widget.ListView/child::android.widget.LinearLayout[${looping}]/descendant::android.widget.TextView[3]    ${current_user_input}
    \    Run Keyword If    ${avail}==${FALSE}    Continue For Loop
    \    ...    ELSE    Run Keywords    Set Suite Variable    ${index_user_input}    ${looping}
    \    ...    AND    Exit For Loop

Show_carousel_items_on_specific_location
    [Arguments]    ${order}    ${element_number}
    Check_VA_response_carousel_exists    ${order}
    Run Keyword If    ${element_number} > ${current_carousel_items}    Fail    There are less number of elements in the carousel.
    ...    ELSE    Go_to_specific_carousel_elements    ${order}    ${element_number}

Go_to_specific_carousel_elements
    [Arguments]    ${order}    ${element_number}    @{buttons}
    ${total_children}    Get Element Count    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.webkit.WebView/android.view.View/android.view.View[${element_number}]/android.view.View/android.view.View[2]/android.view.View
    ${totalbuttonitems}    Evaluate    ${total_children}-1    #1 is for the element for title and subtitle, the rest are buttons
    ${title_now}    Get Text    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.webkit.WebView/android.view.View/android.view.View[${element_number}]/android.view.View/android.view.View[2]/android.view.View[1]/android.view.View[1]
    ${subtitle_now}    Get Text    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.webkit.WebView/android.view.View/android.view.View[${element_number}]/android.view.View/android.view.View[2]/android.view.View[1]/android.view.View[2]
    Set Suite Variable    ${current_carousel_title}    ${title_now}
    Check_where_to_swipe_carousel    ${order}

Check_where_to_swipe_carousel
    [Arguments]    ${order}
    Set_Xlimit_for_carousel
    ${element_XBegin}    Get_XLocation_Carousel_Elements
    Run Keyword If    ${current_tsel_icon_locationX} < ${element_XBegin} < ${current_right_limit}    Run Keywords    Sleep    1s
    ...    AND    Capture Page Screenshot    carousel_here.png
    ...    ELSE IF    ${element_XBegin} < ${current_tsel_icon_locationX}    Run Keyword    Swipe_backward_until_element    ${order}
    ...    ELSE IF    ${element_XBegin} > ${current_right_limit}    Run Keyword    Swipe_forward_until_element    ${order}

Get_XLocation_Carousel_Elements
    [Arguments]    ${new_order}
    ${icon_bound}    Get Element Location    //android.widget.ImageView[@resource-id="jp.naver.line.android:id/chathistory_row_thumbnail"][1]
    ${XLoc}=    Create List
    : FOR    ${loop}    IN RANGE    1    ${current_carousel_items}+1
    \    ${bound}    Get Element Location    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.webkit.WebView/android.view.View/android.view.View[${loop}]
    \    Append To List    ${XLoc}    ${bound}
    #Log List    ${XLoc}

Set_Xlimit_for_carousel
    ${tsel_icon_locationX}    Get Element Location    //android.widget.ImageView[@resource-id="jp.naver.line.android:id/chathistory_row_thumbnail"][1]
    ${right_limit}    Evaluate    ${tsel_icon_locationX}+400    #Just a suggested width, what would be the accepted maximum limit of X location
    Set Suite Variable    ${current_tsel_icon_locationX}    ${tsel_icon_locationX}
    Set Suite Variable    ${current_right_limit}    ${right_limit}

Get_locationX_carousel_item
    ${totalcarousel}    Get Element Count    //a[contains(.,'${current_carousel_button}')]/preceding::*[@class='_3cni' and contains(text(),'${current_carousel_title}')]
    Set Suite Variable    ${total_item_carousel}    ${totalcarousel}
    ${element_XBegin}    Get Horizontal Position    (//a[contains(.,'${current_carousel_button}')]/preceding::*[@class='_3cni' and contains(text(),'${current_carousel_title}')])[${totalcarousel}]
    [Return]    ${element_XBegin}

Get_XLocation_from_bounds
    [Arguments]    ${bound}
    ${boundString}    Convert To String    ${bound}
    ${elementsXY}    Split String    ${boundString}    ${SPACE}
    #location format, e.g. ${elementsXY} = [u"{'y':", u'702.0,', u"'x':", u'718.0}']
    ${elementX}    Get From List    ${elementsXY}    3
    ${finalelementX}    Strip String    ${elementX}    characters=}
    [Return]    ${finalelementX}

Come_here
    Log    Testing

Swipe_down_until_element
    [Arguments]    ${element}
    : FOR    ${loop}    IN RANGE    0    10
    \    Swipe    600    600    600    400
    \    ${count_element}    Run Keyword And Return Status    Element Should Be Visible    //*[@resource-id="jp.naver.line.android:id/message_text" and contains (@text, "${current_user_input}")]
    \    Run Keyword If    ${count_element}    Run Keywords    Log    "Scroll up up up and found it!"
    \    ...    AND    Capture Page Screenshot    here.png
    \    ...    AND    Exit For Loop
    Count_messages

Check_VA_response_image
    [Arguments]    ${order}
    ${new_order}    Evaluate    ${order}+${index_user_input}
    ${count_image}    Get Matching Xpath Count    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.widget.FrameLayout/descendant::*[@resource-id="jp.naver.line.android:id/chathistory_row_image"]
    Should Be True    ${count_image}>0

Click_Button_From_Response
    [Arguments]    ${order}    ${r_button}
    [Documentation]    This keyword can be used to click (any) button that is part of the VA response.
    ${new_order}    Evaluate    ${order}+${index_user_input}
    Click Element    //android.widget.ListView/child::android.widget.LinearLayout[${new_order}]/descendant::android.webkit.WebView/android.view.View/android.view.View[2]/descendant::*[contains(.,${r_button})]
    Set Suite Variable    ${current_user_input}    ${r_button}
    Set Suite Variable    ${scrolled_down}    ${FALSE}
    Sleep    3s
    Show_user_input_on_screen
    Get_Index
